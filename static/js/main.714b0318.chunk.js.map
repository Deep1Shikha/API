{"version":3,"sources":["components/Content/ContentCard.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["ContentCard","props","recipeObj","className","src","image","alt","label","Header","useState","timeoutId","settimeoutId","recipeList","updatedRecipeList","fetchRecipe","searchString","a","Axios","get","APP_ID","APP_KEY","response","console","log","data","hits","type","placeholder","onChange","event","clearTimeout","timeout","setTimeout","target","value","length","map","index","recipe","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAiBeA,EAfK,SAACC,GACnB,IAAQC,EAAcD,EAAdC,UACR,OAEE,mCACE,sBAAKC,UAAU,YAAf,UACE,qBAAKC,IAAKF,EAAUG,MAAOC,IAAI,eAAeH,UAAU,cACxD,4BAAID,EAAUK,QACd,mBAAGJ,UAAU,cAAb,yBACA,mBAAGA,UAAU,UAAb,+BCoCOK,MAtCf,WACE,MAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACKC,IAAMC,IAAN,0CACcH,EADd,mBACqCI,EADrC,oBACuDC,IAF5D,OACZC,EADY,OAIlBC,QAAQC,IAAI,eAAgBF,GAC5BR,EAAkBQ,EAASG,KAAKC,MALd,2CAAH,sDAajB,OACE,qCACE,yBAAQtB,UAAU,SAAlB,mBAEE,uBACEuB,KAAK,SACLvB,UAAU,SACVwB,YAAY,YACZC,SAba,SAACC,GACpBC,aAAapB,GACb,IAAMqB,EAAUC,YAAW,kBAAMlB,EAAYe,EAAMI,OAAOC,SAAQ,KAClEvB,EAAaoB,SAaX,qBAAK5B,UAAU,UAAf,SACGS,EAAWuB,QACVvB,EAAWwB,KAAI,SAAClC,EAAWmC,GAAZ,OACb,cAAC,EAAD,CAAyBnC,UAAWA,EAAUoC,QAA5BD,YCpCjBlB,EAAS,WACTC,EAAU,mCAWRmB,MATf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACI,cAAC,EAAD,OCEOqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.714b0318.chunk.js","sourcesContent":["import \"./Content.css\";\r\n\r\nconst ContentCard = (props) => {\r\n  const { recipeObj } = props;\r\n  return (\r\n    \r\n    <>\r\n      <div className=\"container\">\r\n        <img src={recipeObj.image} alt=\"food_picture\" className=\"foodimage\" />\r\n        <p>{recipeObj.label}</p>\r\n        <p className=\"ingredients\">Ingredients</p>\r\n        <p className=\"contact\">Contact Now</p>\r\n      </div>\r\n\r\n    </> \r\n  );\r\n};\r\nexport default ContentCard;\r\n","import \"./Header.css\";\r\nimport { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { APP_ID } from \"../../App\";\r\nimport { APP_KEY } from \"../../App\";\r\nimport ContentCard from \"../Content/ContentCard\";\r\n\r\nimport \"../Content/Content.css\";\r\n\r\nfunction Header() {\r\n  const [timeoutId, settimeoutId] = useState();\r\n  const [recipeList, updatedRecipeList] = useState([]);\r\n\r\n  const fetchRecipe = async (searchString) => {\r\n    const response = await Axios.get(\r\n      `https://api.edamam.com/search?q=${searchString}&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n    );\r\n    console.log(\"response is \", response);\r\n    updatedRecipeList(response.data.hits);\r\n  };\r\n\r\n  const onTextChange = (event) => {\r\n    clearTimeout(timeoutId);\r\n    const timeout = setTimeout(() => fetchRecipe(event.target.value), 1000);\r\n    settimeoutId(timeout);\r\n  };\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        Recipe\r\n        <input\r\n          type=\"search\"\r\n          className=\"search\"\r\n          placeholder=\"Search...\"\r\n          onChange={onTextChange}\r\n        />\r\n      </header>\r\n      <div className=\"content\">\r\n        {recipeList.length &&\r\n          recipeList.map((recipeObj, index) => (\r\n            <ContentCard key={index} recipeObj={recipeObj.recipe} />\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","\nimport Header from \"./components/Header/Header\"\n\n\nexport const APP_ID = \"482caad9\";\nexport const APP_KEY = \"584409367b7069ce2fc2493ce2442989\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header />\n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}